{
  "name": "code-brt",
  "private": true,
  "displayName": "CodeBRT",
  "description": "CodeBRT, a LLM/VLM framework for code assistant with multiple models.",
  "version": "0.4.0",
  "icon": "static/icon.ico",
  "engines": {
    "vscode": "^1.95.0",
    "node": "~v20.16.0",
    "npm": "~10.9.0"
  },
  "license": "LGPL-3.0-or-later",
  "repository": "https://github.com/whats2000/CodeBRT",
  "extensionKind": [
    "ui",
    "workspace"
  ],
  "bugs": {
    "url": "https://github.com/whats2000/CodeBRT/issues"
  },
  "categories": [
    "AI",
    "Chat",
    "Programming Languages",
    "Education",
    "Machine Learning",
    "Snippets"
  ],
  "keywords": [
    "copilot",
    "chatgpt",
    "github",
    "claude",
    "sonnet",
    "codegpt",
    "ai",
    "llama",
    "llm",
    "openai",
    "gemini"
  ],
  "publisher": "whats2000",
  "main": "extension.js",
  "scripts": {
    "test": "jest",
    "bundle": "webpack --mode production && webpack --mode production --config ./webpack.config.views.js",
    "build": "rd /s /q dist 2>nul & mkdir dist & copy README.md dist\\ & copy LICENSE.md dist\\ & rd /s /q build 2>nul & mkdir build & npm run bundle & node scripts/build.js",
    "build:ci": "rm -rf dist 2>/dev/null || true && mkdir -p dist && cp README.md dist/ && cp LICENSE.md dist/ && rm -rf build 2>/dev/null || true && mkdir -p build && npm run bundle && node scripts/build.js",
    "watch": "webpack --mode development --watch",
    "devserver": "webpack serve --mode development --config ./webpack.config.views.js",
    "format": "prettier 'src/**/*.js' 'src/**/*.jsx' 'src/**/*.ts' 'src/**/*.tsx' './package.json' '.swcrc' './*.js' --no-error-on-unmatched-pattern --write"
  },
  "devDependencies": {
    "@ant-design/icons": "^5.5.1",
    "@anthropic-ai/sdk": "^0.32.0",
    "@babel/core": "^7.26.0",
    "@babel/preset-env": "^7.26.0",
    "@babel/preset-typescript": "^7.26.0",
    "@dnd-kit/core": "^6.1.0",
    "@dnd-kit/sortable": "^8.0.0",
    "@google/generative-ai": "^0.21.0",
    "@huggingface/inference": "^2.8.1",
    "@pmmmwh/react-refresh-webpack-plugin": "^0.5.15",
    "@reduxjs/toolkit": "^2.3.0",
    "@swc/cli": "^0.5.0",
    "@swc/core": "^1.8.0",
    "@swc/jest": "^0.2.37",
    "@types/async-lock": "^1.4.2",
    "@types/cheerio": "^0.22.35",
    "@types/jest": "^29.5.14",
    "@types/lodash": "^4.17.13",
    "@types/node": "^22.9.0",
    "@types/pdf-parse": "^1.1.4",
    "@types/promise-deferred": "^2.0.5",
    "@types/react": "^18.3.12",
    "@types/react-dom": "^18.3.1",
    "@types/react-syntax-highlighter": "^15.5.13",
    "@types/uuid": "^10.0.0",
    "@types/vscode": "^1.95.0",
    "@vscode/vsce": "^3.2.1",
    "antd": "^5.21.6",
    "async-lock": "^1.4.1",
    "axios": "^1.7.7",
    "babel-jest": "^29.7.0",
    "cheerio": "^1.0.0",
    "cohere-ai": "^7.14.0",
    "copy-webpack-plugin": "^12.0.2",
    "css-loader": "^7.1.2",
    "date-fns": "^4.1.0",
    "groq-sdk": "^0.7.0",
    "isbinaryfile": "^5.0.4",
    "jest": "^29.7.0",
    "mammoth": "^1.8.0",
    "markdown-to-text": "^0.1.1",
    "node-html-markdown": "^1.3.0",
    "node-mic": "^1.0.1",
    "ollama": "^0.5.9",
    "openai": "^4.71.0",
    "p-wait-for": "^5.0.2",
    "pdf-parse": "^1.1.1",
    "pdfjs-dist": "^4.8.69",
    "prettier": "3.3.3",
    "prettier-plugin-organize-imports": "^4.1.0",
    "promise-deferred": "^2.0.4",
    "rc-tween-one": "^3.0.6",
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-markdown": "^9.0.1",
    "react-redux": "^9.1.2",
    "react-refresh": "^0.14.2",
    "react-syntax-highlighter": "^15.6.1",
    "react-virtuoso": "^4.12.0",
    "rehype-katex": "^7.0.1",
    "remark-gfm": "^4.0.0",
    "remark-math": "^6.0.0",
    "simple-text-tokenizer": "^1.0.1",
    "styled-components": "^6.1.13",
    "swc-loader": "^0.2.6",
    "terminate": "^2.8.0",
    "tree-sitter-wasms": "^0.1.12",
    "ts-jest": "^29.2.5",
    "ts-node": "^10.9.2",
    "typescript": "^5.6.3",
    "uuid": "^11.0.2",
    "web-tree-sitter": "^0.24.3",
    "webpack": "^5.95.0",
    "webpack-cli": "^5.1.4",
    "webpack-dev-server": "^5.1.0"
  },
  "activationEvents": [],
  "contributes": {
    "commands": [
      {
        "command": "code-brt.triggerInlineCompletion",
        "title": "Trigger Inline Completion"
      },
      {
        "command": "code-brt.openMainView",
        "title": "Open CodeBRT Chat"
      }
    ],
    "keybindings": [
      {
        "command": "code-brt.triggerInlineCompletion",
        "key": "ctrl+shift+x",
        "mac": "cmd+shift+x",
        "when": "editorTextFocus"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "id": "chatActivityBarContainer",
          "title": "CodeBRT Chat",
          "icon": "static/logo.svg"
        }
      ],
      "panel": [
        {
          "id": "workingPanelContainer",
          "title": "CodeBRT Working Panel",
          "icon": "static/logo.svg"
        }
      ]
    },
    "views": {
      "chatActivityBarContainer": [
        {
          "id": "chatActivityBar",
          "type": "webview",
          "name": "Chat"
        }
      ],
      "workingPanelContainer": [
        {
          "id": "workPanel",
          "type": "webview",
          "name": "Working Panel"
        }
      ]
    },
    "configuration": {
      "title": "CodeBRT",
      "properties": {
        "code-brt.geminiApiKey": {
          "type": "string",
          "default": "",
          "description": "Gemini API Key",
          "markdownDescription": "API key for Gemini model"
        },
        "code-brt.anthropicApiKey": {
          "type": "string",
          "default": "",
          "description": "Anthropic API Key",
          "markdownDescription": "API key for Anthropic model"
        },
        "code-brt.openaiApiKey": {
          "type": "string",
          "default": "",
          "description": "OpenAI API Key",
          "markdownDescription": "API key for OpenAI model"
        },
        "code-brt.cohereApiKey": {
          "type": "string",
          "default": "",
          "description": "Cohere API Key",
          "markdownDescription": "API key for Cohere model"
        },
        "code-brt.groqApiKey": {
          "type": "string",
          "default": "",
          "description": "Open Source LLM API Key",
          "markdownDescription": "API key for Open Source LLM model"
        },
        "code-brt.huggingFaceApiKey": {
          "type": "string",
          "default": "",
          "description": "HuggingFace API Key",
          "markdownDescription": "API key for HuggingFace model"
        },
        "code-brt.themePrimaryColor": {
          "type": "string",
          "default": "#f0f0f0",
          "description": "Primary color for the theme"
        },
        "code-brt.themeAlgorithm": {
          "type": [
            "array",
            "string"
          ],
          "items": {
            "type": "string",
            "enum": [
              "darkAlgorithm",
              "defaultAlgorithm",
              "compactAlgorithm"
            ],
            "enumDescriptions": [
              "Dark algorithm",
              "Light algorithm",
              "Compact algorithm"
            ]
          },
          "default": [
            "darkAlgorithm"
          ],
          "description": "Algorithm for the theme",
          "markdownDescription": "The algorithm to use for the theme. The `darkAlgorithm` is a dark theme with a dark background and light text. The `defaultAlgorithm` is a light theme with a light background and dark text. The `compactAlgorithm` is a compact theme with a dark background and light text.",
          "markdownEnumDescriptions": [
            "Dark algorithm",
            "Light algorithm",
            "Compact algorithm"
          ]
        },
        "code-brt.themeBorderRadius": {
          "type": "number",
          "default": 4,
          "description": "Border radius for the theme",
          "markdownDescription": "The border radius for the theme. The default value is 4.",
          "minimum": 0,
          "maximum": 100
        },
        "code-brt.hljsTheme": {
          "type": "string",
          "default": "darcula",
          "description": "Highlight.js theme",
          "markdownDescription": "The theme to use for syntax highlighting. The default value is `darcula`.",
          "enum": [
            "a11yDark",
            "a11yLight",
            "agate",
            "androidstudio",
            "anOldHope",
            "arduinoLight",
            "arta",
            "ascetic",
            "atelierCaveDark",
            "atelierCaveLight",
            "atelierDuneDark",
            "atelierDuneLight",
            "atelierEstuaryDark",
            "atelierEstuaryLight",
            "atelierForestDark",
            "atelierForestLight",
            "atelierHeathDark",
            "atelierHeathLight",
            "atelierLakesideDark",
            "atelierLakesideLight",
            "atelierPlateauDark",
            "atelierPlateauLight",
            "atelierSavannaDark",
            "atelierSavannaLight",
            "atelierSeasideDark",
            "atelierSeasideLight",
            "atelierSulphurpoolDark",
            "atelierSulphurpoolLight",
            "atomOneDark",
            "atomOneDarkReasonable",
            "atomOneLight",
            "brownPaper",
            "codepenEmbed",
            "colorBrewer",
            "darcula",
            "dark",
            "defaultStyle",
            "docco",
            "dracula",
            "far",
            "foundation",
            "github",
            "githubGist",
            "gml",
            "googlecode",
            "gradientDark",
            "gradientLight",
            "grayscale",
            "gruvboxDark",
            "gruvboxLight",
            "hopscotch",
            "hybrid",
            "idea",
            "irBlack",
            "isblEditorDark",
            "isblEditorLight",
            "kimbieDark",
            "kimbieLight",
            "lightfair",
            "lioshi",
            "magula",
            "monoBlue",
            "monokai",
            "monokaiSublime",
            "nightOwl",
            "nnfx",
            "nnfxDark",
            "nord",
            "obsidian",
            "ocean",
            "paraisoDark",
            "paraisoLight",
            "pojoaque",
            "purebasic",
            "qtcreatorDark",
            "qtcreatorLight",
            "railscasts",
            "rainbow",
            "routeros",
            "schoolBook",
            "shadesOfPurple",
            "solarizedDark",
            "solarizedLight",
            "srcery",
            "stackoverflowDark",
            "stackoverflowLight",
            "sunburst",
            "tomorrow",
            "tomorrowNight",
            "tomorrowNightBlue",
            "tomorrowNightBright",
            "tomorrowNightEighties",
            "vs",
            "vs2015",
            "xcode",
            "xt256",
            "zenburn"
          ]
        },
        "code-brt.lastUsedHistoryID": {
          "type": "string",
          "default": "",
          "description": "Last used history ID",
          "markdownDescription": "The ID of the last used history."
        },
        "code-brt.doubleEnterSendMessages": {
          "type": "boolean",
          "default": false,
          "description": "Double enter to send messages for preventing accidental sending",
          "markdownDescription": "Whether to use double enter to send messages for preventing accidental sending."
        }
      }
    }
  }
}
